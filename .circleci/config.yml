version: 2
jobs:
  test:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Building Docker throught docker-compose
          command: docker-compose build

      - run:
          name: Creating database and running migrations
          command: |
            docker-compose run --rm -e RAILS_ENV=test web rake db:setup

      - run:
          name: Running tests
          command: |
            docker-compose run --rm -e RAILS_ENV=test web rspec
          when: always

  deploy_tag:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run:
          name: Building Docker image
          command: |
            $(aws ecr get-login --no-include-email)
            docker build -t $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG .

      - run:
          name: Publish sorting-hat Image in AWS ECS Repository
          command: |
            docker info
            docker tag $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
            docker push $DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:latest
      - run:
          name: Image Publication Announcements
          command: ./.circleci/slack-notificator-publish-image.sh
      - run:
          name: Deploy sorting-hat
          command: ./.circleci/chat-deploy.sh
      - run:
          name: Deploy Announcements
          command: ./.circleci/slack-notificator-deploy.sh

workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - deploy_tag:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
